[{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions.html","title":"Excel.FinancialFunctions","content":"AccrIntCalcMethod \nDayCountBasis \nFinancial \nFrequency \nPaymentDue \nVdbSwitch","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-accrintcalcmethod.html","title":"AccrIntCalcMethod","content":"AccrIntCalcMethod \n Indicates whether accrued interest is computed from issue date (by default) or first interest to settlement \nAccrIntCalcMethod.FromFirstToSettlement \nFromFirstToSettlement \nAccrIntCalcMethod.FromIssueToSettlement \nFromIssueToSettlement","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-accrintcalcmethod.html#FromFirstToSettlement","title":"AccrIntCalcMethod.FromFirstToSettlement","content":"AccrIntCalcMethod.FromFirstToSettlement \nFromFirstToSettlement \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-accrintcalcmethod.html#FromIssueToSettlement","title":"AccrIntCalcMethod.FromIssueToSettlement","content":"AccrIntCalcMethod.FromIssueToSettlement \nFromIssueToSettlement \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-daycountbasis.html","title":"DayCountBasis","content":"DayCountBasis \n The type of Day Count Basis \nDayCountBasis.UsPsa30_360 \nUsPsa30_360 \nDayCountBasis.ActualActual \nActualActual \nDayCountBasis.Actual360 \nActual360 \nDayCountBasis.Actual365 \nActual365 \nDayCountBasis.Europ30_360 \nEurop30_360","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-daycountbasis.html#UsPsa30_360","title":"DayCountBasis.UsPsa30_360","content":"DayCountBasis.UsPsa30_360 \nUsPsa30_360 \n US 30/360","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-daycountbasis.html#ActualActual","title":"DayCountBasis.ActualActual","content":"DayCountBasis.ActualActual \nActualActual \n Actual/Actual","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-daycountbasis.html#Actual360","title":"DayCountBasis.Actual360","content":"DayCountBasis.Actual360 \nActual360 \n Actual/360","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-daycountbasis.html#Actual365","title":"DayCountBasis.Actual365","content":"DayCountBasis.Actual365 \nActual365 \n Actual/365","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-daycountbasis.html#Europ30_360","title":"DayCountBasis.Europ30_360","content":"DayCountBasis.Europ30_360 \nEurop30_360 \n European 30/360","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html","title":"Financial","content":"Financial \n A wrapper class to expose the Excel financial functions API to .NET clients \nFinancial.AccrInt \nAccrInt \nFinancial.AccrInt \nAccrInt \nFinancial.AccrIntM \nAccrIntM \nFinancial.AmorDegrc \nAmorDegrc \nFinancial.AmorLinc \nAmorLinc \nFinancial.CoupDays \nCoupDays \nFinancial.CoupDaysBS \nCoupDaysBS \nFinancial.CoupDaysNC \nCoupDaysNC \nFinancial.CoupNCD \nCoupNCD \nFinancial.CoupNum \nCoupNum \nFinancial.CoupPCD \nCoupPCD \nFinancial.CumIPmt \nCumIPmt \nFinancial.CumPrinc \nCumPrinc \nFinancial.Db \nDb \nFinancial.Db \nDb \nFinancial.Ddb \nDdb \nFinancial.Ddb \nDdb \nFinancial.Disc \nDisc \nFinancial.DollarDe \nDollarDe \nFinancial.DollarFr \nDollarFr \nFinancial.Duration \nDuration \nFinancial.Effect \nEffect \nFinancial.Fv \nFv \nFinancial.FvSchedule \nFvSchedule \nFinancial.IPmt \nIPmt \nFinancial.ISPmt \nISPmt \nFinancial.IntRate \nIntRate \nFinancial.Irr \nIrr \nFinancial.Irr \nIrr \nFinancial.MDuration \nMDuration \nFinancial.Mirr \nMirr \nFinancial.NPer \nNPer \nFinancial.Nominal \nNominal \nFinancial.Npv \nNpv \nFinancial.OddFPrice \nOddFPrice \nFinancial.OddFYield \nOddFYield \nFinancial.OddLPrice \nOddLPrice \nFinancial.OddLYield \nOddLYield \nFinancial.PPmt \nPPmt \nFinancial.Pduration \nPduration \nFinancial.Pmt \nPmt \nFinancial.Price \nPrice \nFinancial.PriceAllowNegativeYield \nPriceAllowNegativeYield \nFinancial.PriceDisc \nPriceDisc \nFinancial.PriceMat \nPriceMat \nFinancial.Pv \nPv \nFinancial.Rate \nRate \nFinancial.Rate \nRate \nFinancial.Received \nReceived \nFinancial.Rri \nRri \nFinancial.Sln \nSln \nFinancial.Syd \nSyd \nFinancial.TBillEq \nTBillEq \nFinancial.TBillPrice \nTBillPrice \nFinancial.TBillYield \nTBillYield \nFinancial.Vdb \nVdb \nFinancial.Vdb \nVdb \nFinancial.Vdb \nVdb \nFinancial.XIrr \nXIrr \nFinancial.XIrr \nXIrr \nFinancial.XNpv \nXNpv \nFinancial.YearFrac \nYearFrac \nFinancial.Yield \nYield \nFinancial.YieldDisc \nYieldDisc \nFinancial.YieldMat \nYieldMat","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#AccrInt","title":"Financial.AccrInt","content":"Financial.AccrInt \nAccrInt \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/accrint-function-fe45d089-6722-4fb3-9379-e1f911d8dc74\u0022\u003EACCRINT function\u003C/a\u003E\n The accrued interest for a security that pays periodic interest, using \u0022FromIssueToSettlement\u0022 calculation method\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#AccrInt","title":"Financial.AccrInt","content":"Financial.AccrInt \nAccrInt \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/accrint-function-fe45d089-6722-4fb3-9379-e1f911d8dc74\u0022\u003EACCRINT function\u003C/a\u003E\n The accrued interest for a security that pays periodic interest\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#AccrIntM","title":"Financial.AccrIntM","content":"Financial.AccrIntM \nAccrIntM \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/accrintm-function-f62f01f9-5754-4cc4-805b-0e70199328a7\u0022\u003EACCRINTM function\u003C/a\u003E\n The accrued interest for a security that pays interest at maturity\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#AmorDegrc","title":"Financial.AmorDegrc","content":"Financial.AmorDegrc \nAmorDegrc \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/amordegrc-function-a14d0ca1-64a4-42eb-9b3d-b0dededf9e51\u0022\u003EAMORDEGRC function\u003C/a\u003E\n The depreciation for each accounting period by using a depreciation coefficient\n ExcelCompliant is used because Excel stores 13 digits. AmorDegrc algorithm rounds numbers  \n and returns different results unless the numbers get rounded to 13 digits before rounding them.  \n I.E. 22.49999999999999 is considered 22.5 by Excel, but 22.4 by the .NET framework    \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#AmorLinc","title":"Financial.AmorLinc","content":"Financial.AmorLinc \nAmorLinc \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/excel-functions-by-category-5f91f4e9-7b42-46d2-9bd1-63f26a86c0eb\u0022\u003EAMORLINC function\u003C/a\u003E\n The depreciation for each accounting period\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CoupDays","title":"Financial.CoupDays","content":"Financial.CoupDays \nCoupDays \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/coupdays-function-cc64380b-315b-4e7b-950c-b30b0a76f671\u0022\u003ECOUPDAYS function\u003C/a\u003E\n The number of days in the coupon period that contains the settlement date\n The Excel algorithm seems wrong in that it doesn\u0027t respect \u0060coupDays = coupDaysBS \u002B coupDaysNC\u0060    \n This equality should stand. The differs from Excel by \u002B/- one or two days when the date spans a leap year.\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CoupDaysBS","title":"Financial.CoupDaysBS","content":"Financial.CoupDaysBS \nCoupDaysBS \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/coupdaybs-function-eb9a8dfb-2fb2-4c61-8e5d-690b320cf872\u0022\u003ECOUPDAYBS function\u003C/a\u003E\n The number of days from the beginning of the coupon period to the settlement date\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CoupDaysNC","title":"Financial.CoupDaysNC","content":"Financial.CoupDaysNC \nCoupDaysNC \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/coupdaysnc-function-5ab3f0b2-029f-4a8b-bb65-47d525eea547\u0022\u003ECOUPDAYSNC function\u003C/a\u003E\n The number of days from the settlement date to the next coupon date\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CoupNCD","title":"Financial.CoupNCD","content":"Financial.CoupNCD \nCoupNCD \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/coupncd-function-fd962fef-506b-4d9d-8590-16df5393691f\u0022\u003ECOUPNCD function\u003C/a\u003E\n The next coupon date after the settlement date \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CoupNum","title":"Financial.CoupNum","content":"Financial.CoupNum \nCoupNum \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/coupnum-function-a90af57b-de53-4969-9c99-dd6139db2522\u0022\u003ECOUPNUM function\u003C/a\u003E\n The number of coupons payable between the settlement date and maturity date\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CoupPCD","title":"Financial.CoupPCD","content":"Financial.CoupPCD \nCoupPCD \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/couppcd-function-2eb50473-6ee9-4052-a206-77a9a385d5b3\u0022\u003ECOUPCD function\u003C/a\u003E\n The previous coupon date before the settlement date\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CumIPmt","title":"Financial.CumIPmt","content":"Financial.CumIPmt \nCumIPmt \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/cumipmt-function-61067bb0-9016-427d-b95b-1a752af0e606\u0022\u003ECUMIPMT function\u003C/a\u003E\n The cumulative interest paid between two periods \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#CumPrinc","title":"Financial.CumPrinc","content":"Financial.CumPrinc \nCumPrinc \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/cumprinc-function-94a4516d-bd65-41a1-bc16-053a6af4c04d\u0022\u003ECUMPRINC function\u003C/a\u003E\n The cumulative principal paid on a loan between two periods \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Db","title":"Financial.Db","content":"Financial.Db \nDb \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/db-function-354e7d28-5f93-4ff1-8a52-eb4ee549d9d7\u0022\u003EDB function\u003C/a\u003E\n The depreciation of an asset for a specified period by using the fixed-declining balance method\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Db","title":"Financial.Db","content":"Financial.Db \nDb \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/db-function-354e7d28-5f93-4ff1-8a52-eb4ee549d9d7\u0022\u003EDB function\u003C/a\u003E\n The depreciation of an asset for a specified period by using the fixed-declining balance method\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Ddb","title":"Financial.Ddb","content":"Financial.Ddb \nDdb \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/ddb-function-519a7a37-8772-4c96-85c0-ed2c209717a5\u0022\u003EDDB function\u003C/a\u003E\n The depreciation of an asset for a specified period by using the double-declining balance method or some other method that you specify\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Ddb","title":"Financial.Ddb","content":"Financial.Ddb \nDdb \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/ddb-function-519a7a37-8772-4c96-85c0-ed2c209717a5\u0022\u003EDDB function\u003C/a\u003E\n The depreciation of an asset for a specified period by using the double-declining balance method or some other method that you specify\n \n Excel Ddb has two interesting characteristics:  \n 1. It special cases ddb for fractional periods between 0 and 1 by considering them to be 1  \n 2. It is inconsistent with VDB(..., True) for fractional periods, even if VDB(..., True) is defined to be the same as ddb. The algorithm for VDB is theoretically correct.  \n This function makes the same 1. adjustment.\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Disc","title":"Financial.Disc","content":"Financial.Disc \nDisc \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/disc-function-71fce9f3-3f05-4acf-a5a3-eac6ef4daa53\u0022\u003EDISC function\u003C/a\u003E\n The discount rate for a security \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#DollarDe","title":"Financial.DollarDe","content":"Financial.DollarDe \nDollarDe \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/dollarde-function-db85aab0-1677-428a-9dfd-a38476693427\u0022\u003EDOLLARDE function\u003C/a\u003E\n Converts a dollar price, expressed as a fraction, into a dollar price, expressed as a decimal number \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#DollarFr","title":"Financial.DollarFr","content":"Financial.DollarFr \nDollarFr \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/dollarfr-function-0835d163-3023-4a33-9824-3042c5d4f495\u0022\u003EDOLLARFR function\u003C/a\u003E\n Converts a dollar price, expressed as a decimal number, into a dollar price, expressed as a fraction \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Duration","title":"Financial.Duration","content":"Financial.Duration \nDuration \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/duration-function-b254ea57-eadc-4602-a86a-c8e369334038\u0022\u003EDURATION function\u003C/a\u003E\n The annual duration of a security with periodic interest payments \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Effect","title":"Financial.Effect","content":"Financial.Effect \nEffect \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/effect-function-910d4e4c-79e2-4009-95e6-507e04f11bc4\u0022\u003EEFFECT function\u003C/a\u003E\n The effective annual interest rate\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Fv","title":"Financial.Fv","content":"Financial.Fv \nFv \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/fv-function-2eef9f44-a084-4c61-bdd8-4fe4bb1b71b3\u0022\u003EFV function\u003C/a\u003E\n The future value of an investment\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#FvSchedule","title":"Financial.FvSchedule","content":"Financial.FvSchedule \nFvSchedule \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/fvschedule-function-bec29522-bd87-4082-bab9-a241f3fb251d\u0022\u003EFVSCHEDULE function\u003C/a\u003E\n The future value of an initial principal after applying a series of compound interest rates \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#IPmt","title":"Financial.IPmt","content":"Financial.IPmt \nIPmt \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/ipmt-function-5cce0ad6-8402-4a41-8d29-61a0b054cb6f\u0022\u003EIPMT function\u003C/a\u003E\n The interest payment for an investment for a given period \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#ISPmt","title":"Financial.ISPmt","content":"Financial.ISPmt \nISPmt \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/ispmt-function-fa58adb6-9d39-4ce0-8f43-75399cea56cc\u0022\u003EISPMT function\u003C/a\u003E\n Calculates the interest paid during a specific period of an investment\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#IntRate","title":"Financial.IntRate","content":"Financial.IntRate \nIntRate \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/intrate-function-5cb34dde-a221-4cb6-b3eb-0b9e55e1316f\u0022\u003EINTRATE function\u003C/a\u003E\n The interest rate for a fully invested security \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Irr","title":"Financial.Irr","content":"Financial.Irr \nIrr \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/irr-function-64925eaa-9988-495b-b290-3ad0c163c1bc\u0022\u003EIRR function\u003C/a\u003E\n The internal rate of return for a series of cash flows \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Irr","title":"Financial.Irr","content":"Financial.Irr \nIrr \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/irr-function-64925eaa-9988-495b-b290-3ad0c163c1bc\u0022\u003EIRR function\u003C/a\u003E\n The internal rate of return for a series of cash flows \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#MDuration","title":"Financial.MDuration","content":"Financial.MDuration \nMDuration \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/mduration-function-b3786a69-4f20-469a-94ad-33e5b90a763c\u0022\u003EMDURATION function\u003C/a\u003E\n The Macauley modified duration for a security with an assumed par value of $100 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Mirr","title":"Financial.Mirr","content":"Financial.Mirr \nMirr \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/mirr-function-b020f038-7492-4fb4-93c1-35c345b53524\u0022\u003EMIRR function\u003C/a\u003E\n The internal rate of return where positive and negative cash flows are financed at different rates \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#NPer","title":"Financial.NPer","content":"Financial.NPer \nNPer \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/nper-function-240535b5-6653-4d2d-bfcf-b6a38151d815\u0022\u003ENPER function\u003C/a\u003E\n The number of periods for an investment \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Nominal","title":"Financial.Nominal","content":"Financial.Nominal \nNominal \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/nominal-function-7f1ae29b-6b92-435e-b950-ad8b190ddd2b\u0022\u003ENOMINAL function\u003C/a\u003E\n The annual nominal interest rate \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Npv","title":"Financial.Npv","content":"Financial.Npv \nNpv \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/npv-function-8672cb67-2576-4d07-b67b-ac28acf2a568\u0022\u003ENPV function\u003C/a\u003E\n The net present value of an investment based on a series of periodic cash flows and a discount rate \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#OddFPrice","title":"Financial.OddFPrice","content":"Financial.OddFPrice \nOddFPrice \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/oddfprice-function-d7d664a8-34df-4233-8d2b-922bcf6a69e1\u0022\u003EODDFPRICE function\u003C/a\u003E\n The price per $100 face value of a security with an odd first period \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#OddFYield","title":"Financial.OddFYield","content":"Financial.OddFYield \nOddFYield \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/oddfyield-function-66bc8b7b-6501-4c93-9ce3-2fd16220fe37\u0022\u003EODDFYIELD function\u003C/a\u003E\n The yield of a security with an odd first period\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#OddLPrice","title":"Financial.OddLPrice","content":"Financial.OddLPrice \nOddLPrice \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/oddlprice-function-fb657749-d200-4902-afaf-ed5445027fc4\u0022\u003EODDLPRICE function\u003C/a\u003E\n The price per $100 face value of a security with an odd last period\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#OddLYield","title":"Financial.OddLYield","content":"Financial.OddLYield \nOddLYield \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/oddlyield-function-c873d088-cf40-435f-8d41-c8232fee9238\u0022\u003EODDLYIELD function\u003C/a\u003E\n The yield of a security with an odd last period\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#PPmt","title":"Financial.PPmt","content":"Financial.PPmt \nPPmt \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/ppmt-function-c370d9e3-7749-4ca4-beea-b06c6ac95e1b\u0022\u003EPPMT function\u003C/a\u003E\n The payment on the principal for an investment for a given period \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Pduration","title":"Financial.Pduration","content":"Financial.Pduration \nPduration \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/pduration-function-44f33460-5be5-4c90-b857-22308892adaf\u0022\u003EPDURATION function\u003C/a\u003E\n Returns the number of periods required by an investment to reach a specified value.\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Pmt","title":"Financial.Pmt","content":"Financial.Pmt \nPmt \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/pmt-function-0214da64-9a63-4996-bc20-214433fa6441\u0022\u003EPMT function\u003C/a\u003E\n The periodic payment for an annuity\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Price","title":"Financial.Price","content":"Financial.Price \nPrice \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/price-function-3ea9deac-8dfa-436f-a7c8-17ea02c21b0a\u0022\u003EPRICE function\u003C/a\u003E\n The price per $100 face value of a security that pays periodic interest \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#PriceAllowNegativeYield","title":"Financial.PriceAllowNegativeYield","content":"Financial.PriceAllowNegativeYield \nPriceAllowNegativeYield \n The price per $100 face value of a security that pays periodic interest\n This is the same calculation as \u0022Price\u0022, but allows a negative yield. Excel does not allow negative yield, so this is an addition to the Excel-\n compatible UI","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#PriceDisc","title":"Financial.PriceDisc","content":"Financial.PriceDisc \nPriceDisc \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/pricedisc-function-d06ad7c1-380e-4be7-9fd9-75e3079acfd3\u0022\u003EPRICEDISC function\u003C/a\u003E\n The price per $100 face value of a discounted security \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#PriceMat","title":"Financial.PriceMat","content":"Financial.PriceMat \nPriceMat \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/pricemat-function-52c3b4da-bc7e-476a-989f-a95f675cae77\u0022\u003EPRICEMAT function\u003C/a\u003E\n The price per $100 face value of a security that pays interest at maturity \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Pv","title":"Financial.Pv","content":"Financial.Pv \nPv \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/pv-function-23879d31-0e02-4321-be01-da16e8168cbd\u0022\u003EPV function\u003C/a\u003E\n The present value of an investment \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Rate","title":"Financial.Rate","content":"Financial.Rate \nRate \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/rate-function-9f665657-4a7e-4bb7-a030-83fc59e748ce\u0022\u003ERATE function\u003C/a\u003E\n The interest rate per period of an annuity \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Rate","title":"Financial.Rate","content":"Financial.Rate \nRate \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/rate-function-9f665657-4a7e-4bb7-a030-83fc59e748ce\u0022\u003ERATE function\u003C/a\u003E\n The interest rate per period of an annuity \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Received","title":"Financial.Received","content":"Financial.Received \nReceived \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/received-function-7a3f8b93-6611-4f81-8576-828312c9b5e5\u0022\u003ERECEIVED function\u003C/a\u003E\n The amount received at maturity for a fully invested security\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Rri","title":"Financial.Rri","content":"Financial.Rri \nRri \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/rri-function-6f5822d8-7ef1-4233-944c-79e8172930f4\u0022\u003ERRI function\u003C/a\u003E\n Returns an equivalent interest rate for the growth of an investment\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Sln","title":"Financial.Sln","content":"Financial.Sln \nSln \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/sln-function-cdb666e5-c1c6-40a7-806a-e695edc2f1c8\u0022\u003ESLN function\u003C/a\u003E\n The straight-line depreciation of an asset for one period\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Syd","title":"Financial.Syd","content":"Financial.Syd \nSyd \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/syd-function-069f8106-b60b-4ca2-98e0-2a0f206bdb27\u0022\u003ESYD function\u003C/a\u003E\n The sum-of-years\u0027 digits depreciation of an asset for a specified period \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#TBillEq","title":"Financial.TBillEq","content":"Financial.TBillEq \nTBillEq \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/tbilleq-function-2ab72d90-9b4d-4efe-9fc2-0f81f2c19c8c\u0022\u003ETBILLEQ function\u003C/a\u003E\n The bond-equivalent yield for a Treasury bill \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#TBillPrice","title":"Financial.TBillPrice","content":"Financial.TBillPrice \nTBillPrice \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/tbillprice-function-eacca992-c29d-425a-9eb8-0513fe6035a2\u0022\u003ETBILLPRICE function\u003C/a\u003E\n The price per $100 face value for a Treasury bill\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#TBillYield","title":"Financial.TBillYield","content":"Financial.TBillYield \nTBillYield \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/tbillyield-function-6d381232-f4b0-4cd5-8e97-45b9c03468ba\u0022\u003ETBILLYIELD function\u003C/a\u003E\n The yield for a Treasury bill\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Vdb","title":"Financial.Vdb","content":"Financial.Vdb \nVdb \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/vdb-function-dde4e207-f3fa-488d-91d2-66d55e861d73\u0022\u003EVDB function\u003C/a\u003E\n The depreciation of an asset for a specified or partial period by using a declining balance method\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Vdb","title":"Financial.Vdb","content":"Financial.Vdb \nVdb \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/vdb-function-dde4e207-f3fa-488d-91d2-66d55e861d73\u0022\u003EVDB function\u003C/a\u003E\n The depreciation of an asset for a specified or partial period by using a declining balance method\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Vdb","title":"Financial.Vdb","content":"Financial.Vdb \nVdb \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/vdb-function-dde4e207-f3fa-488d-91d2-66d55e861d73\u0022\u003EVDB function\u003C/a\u003E\n The depreciation of an asset for a specified or partial period by using a declining balance method.\n\n In the excel version of this algorithm the depreciation in the period (0,1) is not the same as the sum of the depreciations in periods (0,0.5) (0.5,1)  \n \u0060VDB(100,10,13,0,0.5,1,0) \u002B VDB(100,10,13,0.5,1,1,0) != VDB(100,10,13,0,1,1,0)\u0060  \n Notice that in Excel by using \u00271\u0027 (no_switch) instead of \u00270\u0027 as the last parameter everything works as expected.  \n In truth, the last parameter should have no influence in the calculation given that in the first period there is no switch to sln depreciation.  \n Overall, I think my algorithm is correct, even if it disagrees with Excel when startperiod is fractional.\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#XIrr","title":"Financial.XIrr","content":"Financial.XIrr \nXIrr \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/xirr-function-de1242ec-6477-445b-b11b-a303ad9adc9d\u0022\u003EXIRR function\u003C/a\u003E\n The internal rate of return for a schedule of cash flows that is not necessarily periodic\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#XIrr","title":"Financial.XIrr","content":"Financial.XIrr \nXIrr \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/xirr-function-de1242ec-6477-445b-b11b-a303ad9adc9d\u0022\u003EXIRR function\u003C/a\u003E\n The internal rate of return for a schedule of cash flows that is not necessarily periodic\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#XNpv","title":"Financial.XNpv","content":"Financial.XNpv \nXNpv \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/xnpv-function-1b42bbf6-370f-4532-a0eb-d67c16b664b7\u0022\u003EXNPV function\u003C/a\u003E\n The net present value for a schedule of cash flows that is not necessarily periodic\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#YearFrac","title":"Financial.YearFrac","content":"Financial.YearFrac \nYearFrac \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/yearfrac-function-3844141e-c76d-4143-82b6-208454ddc6a8\u0022\u003EYEARFRAC function\u003C/a\u003E\n Calculates the fraction of the year represented by the number of whole days between two dates - not a financial function\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#Yield","title":"Financial.Yield","content":"Financial.Yield \nYield \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/yield-function-f5f5ca43-c4bd-434f-8bd2-ed3c9727a4fe\u0022\u003EYIELD function\u003C/a\u003E\n The yield on a security that pays periodic interest\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#YieldDisc","title":"Financial.YieldDisc","content":"Financial.YieldDisc \nYieldDisc \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/yielddisc-function-a9dbdbae-7dae-46de-b995-615faffaaed7\u0022\u003EYIELDDISC function\u003C/a\u003E\n The annual yield for a discounted security; for example, a Treasury bill\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-financial.html#YieldMat","title":"Financial.YieldMat","content":"Financial.YieldMat \nYieldMat \n\u003Ca target=\u0022_blank\u0022 href=\u0022https://support.microsoft.com/en-us/office/yieldmat-function-ba7d1809-0d33-4bcb-96c7-6c56ec62ef6f\u0022\u003EYIELDMAT function\u003C/a\u003E\n The annual yield of a security that pays interest at maturity\n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-frequency.html","title":"Frequency","content":"Frequency \n The number of coupon payments per year \nFrequency.Annual \nAnnual \nFrequency.SemiAnnual \nSemiAnnual \nFrequency.Quarterly \nQuarterly","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-frequency.html#Annual","title":"Frequency.Annual","content":"Frequency.Annual \nAnnual \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-frequency.html#SemiAnnual","title":"Frequency.SemiAnnual","content":"Frequency.SemiAnnual \nSemiAnnual \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-frequency.html#Quarterly","title":"Frequency.Quarterly","content":"Frequency.Quarterly \nQuarterly \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-paymentdue.html","title":"PaymentDue","content":"PaymentDue \n Indicates when payments are due (end/beginning of period) \nPaymentDue.EndOfPeriod \nEndOfPeriod \nPaymentDue.BeginningOfPeriod \nBeginningOfPeriod","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-paymentdue.html#EndOfPeriod","title":"PaymentDue.EndOfPeriod","content":"PaymentDue.EndOfPeriod \nEndOfPeriod \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-paymentdue.html#BeginningOfPeriod","title":"PaymentDue.BeginningOfPeriod","content":"PaymentDue.BeginningOfPeriod \nBeginningOfPeriod \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-vdbswitch.html","title":"VdbSwitch","content":"VdbSwitch \n Specifies whether to switch to straight-line depreciation when depreciation is greater than the declining balance calculation \nVdbSwitch.DontSwitchToStraightLine \nDontSwitchToStraightLine \nVdbSwitch.SwitchToStraightLine \nSwitchToStraightLine","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-vdbswitch.html#DontSwitchToStraightLine","title":"VdbSwitch.DontSwitchToStraightLine","content":"VdbSwitch.DontSwitchToStraightLine \nDontSwitchToStraightLine \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/reference/excel-financialfunctions-vdbswitch.html#SwitchToStraightLine","title":"VdbSwitch.SwitchToStraightLine","content":"VdbSwitch.SwitchToStraightLine \nSwitchToStraightLine \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/openofficediff.html","title":"Difference between OpenOffice and the library\n","content":"Difference between OpenOffice and the library\nThe library was designed to be Excel-compliant (see Compatibility section), therefore its behavior is different from OpenOffice/LibreOffice.\nMost of the differences are because of the day count conventions and root finding algorithm implementation details.\nSome examples are provided below.\nODDFYIELD, ODDFPRICE\nAccording to the OO wiki,\nthese functions currently return invalid results (it\u0027s #VALUE! even for valid inputs).\nFinancial.OddFYield(DateTime(2008, 12, 11), DateTime(2021, 4, 1), DateTime(2008, 10, 15), \n    DateTime(2009, 4, 1), 0.06, 100., 100., Frequency.Quarterly, DayCountBasis.ActualActual)\nExcel: 0.059976999\nFinancial.OddFPrice(DateTime(1999, 2, 28), DateTime(2010, 6, 30), DateTime(1998, 2, 28),\n    DateTime(2009, 6, 30), 0.07, 0.03, 100., Frequency.Annual, DayCountBasis.Actual360)\nExcel: 127.9031274\n\nODDLYIELD, OODLPRICE\nThe functions return different results. ODDLYIELD example can be found here.\nFinancial.OddLPrice(DateTime(1999, 2, 28), DateTime(2000, 2, 28), DateTime(1998, 2, 28),\n    0.07, 0.03, 130., Frequency.SemiAnnual, DayCountBasis.Actual360)\nExcel: 132.8058252  LibreOffice: 132.8407748124\n\nFinancial.OddLYield(DateTime(1990, 6, 1), DateTime(1995, 12, 31), DateTime(1990, 1, 1),\n    0.002, 103., 100., Frequency.Quarterly, DayCountBasis.ActualActual)\nExcel: -0.00327563  LibreOffice: -0.002925876\n// Returns the same value even though the frequency is different\nFinancial.OddLYield(DateTime(1990, 6, 1), DateTime(1995, 12, 31), DateTime(1990, 1, 1),\n    0.002, 103., 100., Frequency.Annual, DayCountBasis.ActualActual)\nExcel: -0.00327205  LibreOffice: -0.002925876\n\nACCRINT, DISC, DURATION, PRICE, YIELD, INTRATE, TBILL* and others\nMost likely the differences can be explained with YEARFRAC/day count implementations.\nDURATION in OO is a completely different function, the analog of Excel one is called DURATION_ADD.\n// in our tests, the numbers for European 30/360 basis were the same.\nlet accrint basis = \n    Financial.AccrInt(DateTime(1990, 3, 4), DateTime(1993, 3, 31), \n        DateTime(1992, 3, 4), 0.07, 10000., Frequency.SemiAnnual, basis)\n\naccrint DayCountBasis.UsPsa30_360\nExcel: 1401.944444  LibreOffice: 1400.000000\naccrint DayCountBasis.ActualActual\nExcel: 1398.076923  LibreOffice: 1401.917808\naccrint DayCountBasis.Actual360\nExcel: 1394.166667  LibreOffice: 1421.388889\naccrint DayCountBasis.Actual365\nExcel: 1399.041096  LibreOffice: 1401.917808\n\nFinancial.AccrIntM(DateTime(1990, 3, 4), DateTime(2010, 6, 5), 0.1, 12030.34, DayCountBasis.ActualActual)\nExcel: 24367.7909   LibreOffice: 24383.68639\n\nFinancial.Disc(DateTime(2003, 2, 14), DateTime(2004, 3, 31), 23., 100., DayCountBasis.ActualActual)\nExcel: 0.684757     LibreOffice: 0.683820\n\nFinancial.Duration(DateTime(1980, 2, 15), DateTime(2000, 2, 28), 100., 0.03, \n    Frequency.Annual, DayCountBasis.Actual360)\nExcel: 8.949173     LibreOffice: 9.254729\n\nFinancial.MDuration(DateTime(1980, 2, 15), DateTime(2000, 2, 28), 100., 0.03,\n    Frequency.SemiAnnual, DayCountBasis.Actual360)\nExcel: 8.860247     LibreOffice: 9.158550\n\nFinancial.Price(DateTime(1980, 2, 15), DateTime(2000, 2, 28), 0.07, 0.1, 100., \n    Frequency.Annual, DayCountBasis.Actual360)\nExcel: 74.442516    LibreOffice: 74.334983\n\nFinancial.PriceDisc(DateTime(1980, 2, 15), DateTime(2000, 2, 28), 0.01, 100., DayCountBasis.ActualActual)\nExcel: 79.966367    LibreOffice: 80.005464\n\nFinancial.IntRate(DateTime(1980, 2, 15), DateTime(1980, 5, 4), 23., 130., DayCountBasis.UsPsa30_360)\nExcel: 21.199780    LibreOffice: 21.471572\n\nFinancial.TBillPrice(DateTime(1980, 2, 15), DateTime(1980, 3, 15), 2.)\nExcel: 83.888889    LibreOffice: 82.777778\n\nFinancial.Received(DateTime(1980, 2, 15), DateTime(2000, 2, 28), 200., 0.01, DayCountBasis.ActualActual)\nExcel: 250.105148   LibreOffice: 249.982925\n\n// the only function which seems to behave differently in Excel Office for Mac\nFinancial.AmorDegrc(100., DateTime(1998, 2, 28), DateTime(2000, 2, 29), \n    10., 0.3, 0.15, DayCountBasis.Actual365, true)\nExcel: 0    Excel for Mac: -2   LibreOffice: 75\n\nAMORLINC\nAs stated here,\nwhen the date of purchase is the end of a period, Excel regards the initial period 0 as the first full period,\nwhereas OO regards the initial period as of zero length and returns 0.\nHowever, there\u0027re other differences too.\nFinancial.AmorLinc(100., DateTime(1998, 2, 28), DateTime(2000, 2, 29), 10., 0., 0.07, DayCountBasis.Actual365)\nExcel: 14.000000   LibreOffice: 14.019178\nFinancial.AmorLinc(100., DateTime(1998, 2, 28), DateTime(2009, 6, 30), 50., 1.7, 0.1, DayCountBasis.UsPsa30_360)\nExcel: 0.0000000   LibreOffice: -63.33333\n\nCOUPDAYS, COUPDAYSBS, COUPDAYSNC\nIn Excel the equality coupDays = coupDaysBS \u002B coupDaysNC doesn\u0027t necessary hold when basis is other than Actual/Actual.\nlet cdParam = DateTime(1980, 2, 15), DateTime(2000, 2, 28), Frequency.Annual, DayCountBasis.UsPsa30_360\n\nFinancial.CoupDays cdParam \nFinancial.CoupDaysBS cdParam\nFinancial.CoupDaysNC cdParam\nExcel: 360 \u0026lt;\u0026gt; 345 \u002B 13  LibreOffice: 360 = 345 \u002B 15\n\nCUMIPMT, CUMPRINC\nOO analogs are called CUMIPMT_ADD and CUMPRINC_ADD (they\u0027re expected to be compatible with Excel)\nFinancial.CumIPmt(0.6, 10., 100., 1.3, 2., PaymentDue.EndOfPeriod)\nExcel: -59.669577   LibreOffice: -119.669577\nFinancial.CumPrinc(0.6, 10., 100., 1.3, 2., PaymentDue.EndOfPeriod)\nExcel: -0.8811289   LibreOffice: -1.431834\n\nDB, DDB\nSeems like DDB doesn\u0027t accept fractional periods.\nFinancial.Db(100., 10., 1., 0.3, 1.)\nExcel: 7.5  LibreOffice: 0.0\nFinancial.Ddb(100., 10., 1., 0.3, 1.)\nExcel: 90.0 LibreOffice: Err:502\n\nIRR, XIRR\nThe implementation details of root finding algorithms might be the cause of differences.\nWe didn\u0027t check all the tests, because OO doesn\u0027t accept arrays as parameters (e.g. {-100;100}). But some of them don\u0027t work anyway.\nFinancial.XIrr([206101714.849377; -156650972.54265], [DateTime(2001, 2, 28); DateTime(2001, 3, 31)], -0.1)\nExcel: -0.960452    LibreOffice: Err:502 (Invalid argument)\n\n","headings":["Difference between OpenOffice and the library","ODDFYIELD, ODDFPRICE","ODDLYIELD, OODLPRICE","ACCRINT, DISC, DURATION, PRICE, YIELD, INTRATE, TBILL* and others","AMORLINC","COUPDAYS, COUPDAYSBS, COUPDAYSNC","CUMIPMT, CUMPRINC","DB, DDB","IRR, XIRR"],"type":"content"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/index.html","title":"Excel Financial Functions\n","content":"Excel Financial Functions\nThis is a .NET library that provides the full set of financial functions from Excel.\nIt can be used from both F# and C# as well as from other .NET languages.\nThe main goal for the library is compatibility with Excel, by providing the same functions,\nwith the same behaviour.\nNote though that this is not a wrapper over the Excel library; the functions have been\nre-implemented in managed code so that you do not need to have Excel installed to use this library.\nThe package is available on NuGet. \nYou can also use ExcelFinancialFunctions in dotnet interactive\nnotebooks, in Visual Studio Code\nor Jupyter, or in F# scripts (.fsx files),\nby referencing the package as follows:\n#r \u0026quot;nuget: ExcelFinancialFunctions\u0026quot; // Use the latest version \n\nExample\nThis example demonstrates using the YIELD function to calculate bond yield.\n#r \u0026quot;ExcelFinancialFunctions.dll\u0026quot;\nopen System\nopen Excel.FinancialFunctions\n\n// returns 0.065 or 6.5%\nFinancial.Yield (DateTime(2008,2,15), DateTime(2016,11,15), 0.0575, 95.04287, 100.0, \n                 Frequency.SemiAnnual, DayCountBasis.UsPsa30_360)\n\nSamples \u0026amp; documentation\nThe library comes with comprehensible documentation. The tutorials and articles are\nautomatically generated from *.fsx files in [the docs folder][docs]. The API\nreference is automatically generated from Markdown comments in the library implementation.\n\n\nAPI Reference contains automatically generated documentation for all types, modules\nand functions in the library. This includes the links to the Excel documentation.\n\nExcel Compatibility section explains the possible differences with Excel\u0027s results.\n\nContributing and copyright\nThe project is hosted on GitHub where you can report issues, fork\nthe project and submit pull requests. If you\u0027re adding new public API, please also\nconsider adding samples that can be turned into a documentation.\nThe library was originally developed by Luca Bolognese, the initial version can be\ndownloaded here. It is available under Apache License, for more information\nsee the License file in the GitHub repository.\n","headings":["Excel Financial Functions","Example","Samples \u0026amp; documentation","Contributing and copyright"],"type":"content"},{"uri":"https://fsprojects.github.io/ExcelFinancialFunctions/compatibility.html","title":"Compatibility\n","content":"Compatibility\nThis library replicates Excel behavior. There\u0027re 199,252 tests verifying the results against Excel 2010 and their number can be raised significantly by adding new test values. Several tests check the function properties, e.g. that bond duration can\u0027t be greater than maturity.\nThe current version matches Excel 2010, which is slightly different from 2003, see Function Improvements in Excel 2010.\nNote, that console tests require Excel, whereas the unit tests can be run even on mono - their parameters and expected results are stored in files.\nHowever, there\u0027re still some differences comparing to Excel.\nRead more about OpenOffice vs Excel here.\nCOUPDAYS\nThe Excel algorithm doesn\u0027t respect equality coupDays = coupDaysBS \u002B coupDaysNC. The library result differs from Excel by \u002B/- one or two days when the date spans a leap year. (office docs)\nlet settlement = DateTime(2012, 1, 1)\nlet maturity   = DateTime(2016, 2, 29)\n\nlet param = settlement, maturity, Frequency.SemiAnnual, DayCountBasis.ActualActual\n\nlet days = Financial.CoupDays param\nlet bs = Financial.CoupDaysBS param\nlet nc = Financial.CoupDaysNC param\n// Excel: 2\ndays - bs - nc\nval days : float = 182.0\nval bs : float = 123.0\nval nc : float = 59.0\nval it : float = 0.0\n\nVDB\nIn the Excel version of this algorithm the depreciation in the period (0,1) is not the same as the sum of the depreciations in periods (0,0.5) (0.5,1)\nNotice that in Excel by using \u00271\u0027 (no_switch) instead of \u00270\u0027 as the last parameter everything works as expected.\nIn truth, the last parameter should have no influence in the calculation given that in the first period there is no switch to sln depreciation.\nOverall, the algorithm is correct, even if it disagrees with Excel when startperiod is fractional. (office docs)\nlet vdb sp ep switch = \n    Financial.Vdb(100.0, 10.0, 13.0, sp, ep, 1.0, \n        if switch then VdbSwitch.SwitchToStraightLine else VdbSwitch.DontSwitchToStraightLine)\n\nlet p1 = vdb 0.0 0.5 false\nlet p2 = vdb 0.5 1.0 false\nlet total = vdb 0.0 1.0 false\n// Excel: 0.1479\ntotal - p1 - p2 \nval p1 : float = 3.846153846\nval p2 : float = 3.846153846\nval total : float = 7.692307692\nval it : float = 0.0\n\nlet p1sw = vdb 0.0 0.5 true\nlet p2sw = vdb 0.5 1.0 true\nlet totalsw = vdb 0.0 1.0 true\n// Excel: 0.0000\ntotalsw - p1sw - p2sw \nval p1sw : float = 3.846153846\nval p2sw : float = 3.846153846\nval totalsw : float = 7.692307692\nval it : float = 0.0\n\nAMORDEGRC\nExcelCompliant is used because Excel stores 13 digits. AmorDegrc algorithm rounds numbers\nand returns different results unless the numbers get rounded to 13 digits before rounding them.\nI.E. 22.49999999999999 is considered 22.5 by Excel, but 22.4 by the .NET framework. (office docs)\nlet amorDegrc excelCompliant = \n    Financial.AmorDegrc(100.0, DateTime(2014,1,1), DateTime(2016,1,1), \n        50.0, 1.0, 0.3, DayCountBasis.ActualActual, excelCompliant)\n\namorDegrc true\nval it : float = 23.0\namorDegrc false\nval it : float = 22.0\n\nDDB\nExcel Ddb has two interesting characteristics:\n1. It special cases ddb for fractional periods between 0 and 1 by considering them to be 1\n2. It is inconsistent with VDB(..., True) for fractional periods, even if VDB(..., True) is defined to be the same as ddb. The algorithm for VDB is theoretically correct.\nThis function makes the same 1. adjustment.(office docs)\nRATE and ODDFYIELD\nExcel uses a different root finding algo. Sometimes the library results are better, sometimes Excel\u0027s. (office docs)\nXIRR and XNPV\nXIRR and XNPV functions are related: the net present value, given the internal rate of return, should be zero.\nHowever, XNPV works only for positive rates even though the XIRR results might be negative.\nThe results can also be different because of the root finding functions. (office docs)\nlet dates = [|DateTime(2000, 2, 29); DateTime(2000, 3, 31)|]\nlet values = [|206101714.849377; -156650972.54265|]\n// Excel: -0.960452189\nFinancial.XIrr(values, dates, -0.1)\nval it : float = -0.960452195\n// Excel: #NUM!\nFinancial.XNpv(-0.960452195, values, dates)\nval it : float = -0.008917063475\n// Excel: #NUM!\nFinancial.XNpv(-0.960452189, values, dates)\nval it : float = 2.646784514\n\nlet values2 = [|15108163.3840923; -75382259.6628424|]\n// Excel: #NUM!\nFinancial.XIrr(values2, dates, -0.1)\nval it : float = 165601346.1\n// Excel: 165601345.6\nFinancial.XIrr(values2, dates, 0.1)\nval it : float = 165601346.1\nFinancial.XNpv(165601346.1, values2, dates)\nval it : float = -0.000269997865\nFinancial.XNpv(165601345.6, values2, dates)\nval it : float = -0.004144238308\n\n","headings":["Compatibility","COUPDAYS","VDB","AMORDEGRC","DDB","RATE and ODDFYIELD","XIRR and XNPV"],"type":"content"}]